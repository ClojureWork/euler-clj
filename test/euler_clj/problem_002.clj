(ns euler-clj.problem-002
  (:require [clojure.test :refer :all]
            [euler-clj.core :refer :all]))

; Project Euler
;
; Even Fibonnaci Numbers
;
; Problem 2
;
; Each new term in the Fibonacci sequence is generated by adding the previous
; two terms. By starting with 1 and 2, the first 10 terms will be:
;
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;
; By considering the terms in the Fibonacci sequence whose values do not exceed
; four million, find the sum of the even-valued terms.;
;
; Solution by twcrone

(def four-mil (* 4 1000000))

; stolen from Clojure documentation on lazy-seq
(defn fib
  ([]
   (fib 1 1))
  ([a b]
   (lazy-seq (cons a (fib b (+ a b))))))

(defn solve-for [max]
  (reduce + (take-while (partial > max) (filter even? (fib)))))

; test
(deftest base-case
  (is (= (solve-for 100) 44)))

(run-tests 'euler-clj.problem-002)

; main
(println "Problem 2 Solution: " (solve-for four-mil))
